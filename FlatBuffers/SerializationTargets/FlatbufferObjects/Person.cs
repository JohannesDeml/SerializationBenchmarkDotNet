// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace FlatbufferObjects
{

using global::System;
using global::System.Collections.Generic;
using global::FlatBuffers;

public struct Person : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_2_0_0(); }
  public static Person GetRootAsPerson(ByteBuffer _bb) { return GetRootAsPerson(_bb, new Person()); }
  public static Person GetRootAsPerson(ByteBuffer _bb, Person obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public Person __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public byte Age { get { int o = __p.__offset(4); return o != 0 ? __p.bb.Get(o + __p.bb_pos) : (byte)0; } }
  public bool MutateAge(byte age) { int o = __p.__offset(4); if (o != 0) { __p.bb.Put(o + __p.bb_pos, age); return true; } else { return false; } }
  public string FirstName { get { int o = __p.__offset(6); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetFirstNameBytes() { return __p.__vector_as_span<byte>(6, 1); }
#else
  public ArraySegment<byte>? GetFirstNameBytes() { return __p.__vector_as_arraysegment(6); }
#endif
  public byte[] GetFirstNameArray() { return __p.__vector_as_array<byte>(6); }
  public string LastName { get { int o = __p.__offset(8); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetLastNameBytes() { return __p.__vector_as_span<byte>(8, 1); }
#else
  public ArraySegment<byte>? GetLastNameBytes() { return __p.__vector_as_arraysegment(8); }
#endif
  public byte[] GetLastNameArray() { return __p.__vector_as_array<byte>(8); }
  public FlatbufferObjects.Sex Sex { get { int o = __p.__offset(10); return o != 0 ? (FlatbufferObjects.Sex)__p.bb.Get(o + __p.bb_pos) : FlatbufferObjects.Sex.Undefined; } }
  public bool MutateSex(FlatbufferObjects.Sex sex) { int o = __p.__offset(10); if (o != 0) { __p.bb.Put(o + __p.bb_pos, (byte)sex); return true; } else { return false; } }

  public static Offset<FlatbufferObjects.Person> CreatePerson(FlatBufferBuilder builder,
      byte age = 0,
      StringOffset first_nameOffset = default(StringOffset),
      StringOffset last_nameOffset = default(StringOffset),
      FlatbufferObjects.Sex sex = FlatbufferObjects.Sex.Undefined) {
    builder.StartTable(4);
    Person.AddLastName(builder, last_nameOffset);
    Person.AddFirstName(builder, first_nameOffset);
    Person.AddSex(builder, sex);
    Person.AddAge(builder, age);
    return Person.EndPerson(builder);
  }

  public static void StartPerson(FlatBufferBuilder builder) { builder.StartTable(4); }
  public static void AddAge(FlatBufferBuilder builder, byte age) { builder.AddByte(0, age, 0); }
  public static void AddFirstName(FlatBufferBuilder builder, StringOffset firstNameOffset) { builder.AddOffset(1, firstNameOffset.Value, 0); }
  public static void AddLastName(FlatBufferBuilder builder, StringOffset lastNameOffset) { builder.AddOffset(2, lastNameOffset.Value, 0); }
  public static void AddSex(FlatBufferBuilder builder, FlatbufferObjects.Sex sex) { builder.AddByte(3, (byte)sex, 0); }
  public static Offset<FlatbufferObjects.Person> EndPerson(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<FlatbufferObjects.Person>(o);
  }
  public static void FinishPersonBuffer(FlatBufferBuilder builder, Offset<FlatbufferObjects.Person> offset) { builder.Finish(offset.Value); }
  public static void FinishSizePrefixedPersonBuffer(FlatBufferBuilder builder, Offset<FlatbufferObjects.Person> offset) { builder.FinishSizePrefixed(offset.Value); }
};


}
